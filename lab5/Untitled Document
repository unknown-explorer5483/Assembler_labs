


    call getwordspos

    mov rbx,0
    mov rcx,0
    mov cl,dl
    cycle1:
    push rcx

    mov r14,0
    mov rdx,0
    mov cl,bl


    call isunique

    cmp rdx,0
    jne skipadd

    mov cl,[WordLen+rbx+1]
    sub cl,[WordLen+rbx]
    dec cl

    push rcx
    mov r9,r8
    add r9b,[WordLen+rbx]
    mov RSI,r9
    lea RDI,[WordList+r12]
    rep movsb
    pop rcx

    add r12b,cl
    mov BYTE[WordList+r12],32
    inc r12b

    skipadd:
    inc rbx    
    dec ecx
    jnz cycle1


    lea rdi,[WordList]
    call _Z6print1Pc

    getwordspos:

    mov r12,0
    mov rbx,-1
    mov rdx,1
    nextsym:
    inc rbx
    cmp BYTE[r8+rbx],0
    je after
    cmp BYTE[r8+rbx],32
    jne nextsym
    mov [WordLen+rdx],bl
    inc BYTE[WordLen+rdx]
    inc rdx
    inc BYTE[WordCount]    
    jmp nextsym
    after:
    mov [WordLen+rdx],bl
    inc BYTE[WordLen+rdx]

    ret

  isunique:

    mov rdx,0   ; not found

    mov bl,cl

    mov r12,rbx    
cmpagain:
    cmp BYTE[WordLen+rbx+2],0
    je endcmp

    mov cl,[WordLen+r12+1]
    sub cl,[WordLen+r12]
    dec cl


    mov rsi,0
    mov rdi,0
    mov sil,[WordLen+rbx+1]
    mov r14,r8
    add rsi,r14
    mov dil,[WordLen+r12]
    add rdi,r14
    inc cl
    inc cl
    rep cmpsb
    cmp cl,0
    jne notfound

    mov rdx,1  ; found   
    jmp endcmp

    notfound:
    
    
    inc rbx
    jmp cmpagain
endcmp:

    ret























